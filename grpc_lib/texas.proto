syntax = "proto3";
package texas;

message GetStatusResponse {
  int32 code = 1;        //错误码
  string info = 2;       //错误信息
  RoomStatus room_status = 3;      //房间的状态
}

message RoomStatus {
  int32 stage = 1;      //当前房间的状态，开局前/翻牌/转牌/河牌
  repeated PlayerStatus players = 2; //玩家状态
  repeated Poker public = 3;         //公共牌
  int32 banker = 4;        //庄家位置
  int32 speak = 5;          //现在是否speak
}

message PlayerStatus {
  string player_name = 1;  //玩家名称
  int32 player_id = 2;     //玩家id
  int32 counter = 3;       //筹码量
  int32 buyin_time = 4;    //buyin次数
  bool active = 5;         //active/folded状态
  bool ready = 6;           //准备
  int32 pool = 7;          //该玩家投入的筹码量
  repeated Poker hands = 8;           //玩家手牌
}

message Poker {
  int32 suit = 1;  //花色
  int32 value = 2;   //点数
}

message GetStatusRequest {
  UserInfo user_info = 1;   //用户信息
  int32 room_id = 2;       //如果在房间，房间的id是什么
  
}
message UserInfo {
  string user_name = 1;  //用户名
  string passwd = 2;     //密码
}
message ActionRequest {
  UserInfo user_info = 1;   //用户信息
  int32 room_id = 2;       //如果在房间，房间的id是什么
  string extra = 3;         //一个json，解析玩家的动作（准备/离开/check/call/rise/folded）
}
message ActionResponse {
  int32 code = 1;           //错误码
  string info = 2;          //错误信息
}

message CreateRoomRequest {
  string room_name = 1;  //房间名称
  int32 blind = 2;       //盲注额度
  int32 buyin = 3;       //买入大小
  UserInfo user_info = 4;   //用户信息
}

message GetinRoomRequest {
  int32 room_id = 1;     //房间id
  UserInfo user_info = 2;   //用户信息
}

message RoomResponse {
  int32 code = 1;        //错误码
  string info = 2;       //错误信息
  string room_name = 3;  //房间名
  int32 room_id = 4;     //房间id
  int32 blind = 5;       //盲注额度
  int32 buyin = 6;       //买入大小
}

service Texas {
  rpc UserLogin(UserInfo) returns (ActionResponse) {}
  rpc UserRegister(UserInfo) returns (ActionResponse) {}
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse) {}
  rpc Action(ActionRequest) returns (ActionResponse) {}
  rpc CreateRoom(CreateRoomRequest) returns (RoomResponse) {}
  rpc GetinRoom(GetinRoomRequest) returns (RoomResponse) {}
}
